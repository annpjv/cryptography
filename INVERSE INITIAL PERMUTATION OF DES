#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
 int enc[8][8],dec[8][8];
 int i,j,k,l,temp,length,c=0,count=0;
 char hexarray[17]=" ",binarray[65]=" ",m,res[8][8],sym[500]=" ",symb[5]=" ";
 clrscr();
 l=1;
 for(j=1;j<8;j+=2)
 {
  for(i=7;i>=0;i--)
   {
    dec[i][j]=l;
    l++;
   }
  }
  for(j=0;j<7;j+=2)
  {
   for(i=7;i>=0;i--)
   {
    dec[i][j]=l;
    l++;
   }
  }
  printf("\n The Inverse Permutation Table is....\n\n");
  for(i=0;i<8;i++)
  {
   for(j=0;j<8;j++)
    {
     printf("%d\t",dec[i][j]);
    }
    printf("\n");
  }
  printf("Enter the plaintext in hexadecimal....\n");
  gets(hexarray);
  printf("\nThe plaintext is...\n%s\n",hexarray);
  length=strlen(hexarray);
  for(i=0;i<length;i++)
  {
   m=hexarray[i];
   switch(m)
    {
     case '0':
     strcat(binarray,"0000");
     break;
     case '1':
     strcat(binarray,"0001");
     break;
     case '2':
     strcat(binarray,"0010");
     break;
     case '3':
     strcat(binarray,"0011");
     break;
     case '4':
     strcat(binarray,"0100");
     break;
     case '5':
     strcat(binarray,"0101");
     break;
     case '6':
     strcat(binarray,"0110");
     break;
     case '7':
     strcat(binarray,"0111");
     break;
     case '8':
     strcat(binarray,"1000");
     break;
     case '9':
     strcat(binarray,"1001");
     break;
     case 'A':
     strcat(binarray,"1010");
     break;
     case 'B':
     strcat(binarray,"1011");
     break;
     case 'C':
     strcat(binarray,"1100");
     break;
     case 'D':
     strcat(binarray,"1101");
     break;
     case 'E':
     strcat(binarray,"1110");
     break;
     case 'F':
     strcat(binarray,"1111");
     break;
     default:
     break;
    }
  }
   for(i=0;i<8;i++)
    {
     for(j=0;j<8;j++)
     {
      temp=dec[i][j];
      res[i][j]=binarray[temp];
     }
    }
  count=0;
  for(i=0;i<8;i++)
  {
   for(j=0;j<8;j++)
   {
   if(count<4)
    {
     sym[c++]=res[i][j];
     count++;
    }
   else
   {
    sym[c++]=' ';
    sym[c++]=res[i][j];
    count=1;
   }
  }
 }
 j=0;
 printf("\nThe cipher text is....\n\n");
 for(i=0;i<=c;i++)
 {
 if(j<4)
  symb[j++]=sym[i];
 else
 {
  symb[j]='\0';
  if(strcmp(symb,"0000")==0)
   printf("0");
  else if(strcmp(symb,"0001")==0)
   printf("1");
  else if(strcmp(symb,"0010")==0)
   printf("2");
  else if(strcmp(symb,"0011")==0)
   printf("3");
  else if(strcmp(symb,"0100")==0)
   printf("4");
  else if(strcmp(symb,"0101")==0)
   printf("5");
  else if(strcmp(symb,"0110")==0)
   printf("6");
  else if(strcmp(symb,"0111")==0)
   printf("7");
  else if(strcmp(symb,"1000")==0)
   printf("8");
  else if(strcmp(symb,"1001")==0)
   printf("9");
  else if(strcmp(symb,"1010")==0)
   printf("A");
  else if(strcmp(symb,"1011")==0)
   printf("B");
  else if(strcmp(symb,"1100")==0)
   printf("C");
  else if(strcmp(symb,"1101")==0)
   printf("D");
  else if(strcmp(symb,"1110")==0)
   printf("E");
  else if(strcmp(symb,"1111")==0)
   printf("F");
  j=0;
  }
 }
getch();
}
